import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import contextily as ctx
from matplotlib.collections import LineCollection
from matplotlib.colors import Normalize
import os
import argparse

# For airport boundary plotting
from matplotlib.patches import Polygon

# Parse command-line arguments with default values
parser = argparse.ArgumentParser(description="Parse and plot flight data.")
parser.add_argument('--input', default='flight.csv', help="Input CSV filename (e.g., airspeed.csv)")
parser.add_argument('--show-ksmo-cords', action='store_true', help="Print KSMO boundary coordinates and exit")
args = parser.parse_args()

input_csv = args.input
# Set outdir to the input filename without extension
outdir = os.path.splitext(os.path.basename(input_csv))[0]
os.makedirs(outdir, exist_ok=True)

# Define KSMO (Santa Monica Airport) boundary using precise GeoJSON MultiPolygon coordinates
# (from the provided geojson for Santa Monica Airport)
ksmo_boundary_coords = [
          [
            [
              [-118.454234390081325, 34.014920408005786],
              [-118.454234297234677, 34.014920056756637],
              [-118.454234959997663, 34.014919494409533],
              [-118.45452414029333, 34.014674704782998],
              [-118.455108688992695, 34.014181055827116],
              [-118.455231071249315, 34.014077562442424],
              [-118.455354267895231, 34.013973377088405],
              [-118.455482061526723, 34.013865308480696],
              [-118.455539890498144, 34.013816404670827],
              [-118.455532475862455, 34.013824193965597],
              [-118.455509664632757, 34.013846562382945],
              [-118.456193113501172, 34.014677776589856],
              [-118.456326990449469, 34.014837017113138],
              [-118.457166092112445, 34.014349102981377],
              [-118.456484316657594, 34.013539169574564],
              [-118.456551904852901, 34.013499258142247],
              [-118.45628676219134, 34.013184821818641],
              [-118.456248623458364, 34.013139589937047],
              [-118.45631621194056, 34.01310036560524],
              [-118.456451633365063, 34.013021516523374],
              [-118.456586663856001, 34.01294289144677],
              [-118.456721745294061, 34.012864324625575],
              [-118.456857152885121, 34.012785460714738],
              [-118.456992172821899, 34.012706826207349],
              [-118.457127273112704, 34.012628282299033],
              [-118.457262642886121, 34.012549372998038],
              [-118.457397623895318, 34.012470687696869],
              [-118.457532911951006, 34.012392369808055],
              [-118.457668198671001, 34.012314051772016],
              [-118.457804040890508, 34.012235407825912],
              [-118.457939328180757, 34.012157088581155],
              [-118.45807461414023, 34.012078770090731],
              [-118.458210455596046, 34.012000125688381],
              [-118.45834574104812, 34.011921806894811],
              [-118.458481027329626, 34.011843487945868],
              [-118.458616868021778, 34.011764843087278],
              [-118.458776569774159, 34.011672386927671],
              [-118.45851129883593, 34.011357339353168],
              [-118.458454127457117, 34.011289476218963],
              [-118.458397616494608, 34.011222394885309],
              [-118.458239912406356, 34.011035198613186],
              [-118.458358740192836, 34.011133257227939],
              [-118.462726758419947, 34.008110815358499],
              [-118.460417293610206, 34.006249388445461],
              [-118.457381156175188, 34.010015816188371],
              [-118.457286614596896, 34.00990358986197],
              [-118.457282262267825, 34.009898555954258],
              [-118.457277821890173, 34.00989365400406],
              [-118.45727327795872, 34.009888820061093],
              [-118.457268636953955, 34.009884051396185],
              [-118.457263894560441, 34.009879350730344],
              [-118.457259054040719, 34.009874720755725],
              [-118.457254116491924, 34.009870164172803],
              [-118.457249087297313, 34.009865675551957],
              [-118.457243962171063, 34.009861263023204],
              [-118.45723874759355, 34.009856923857349],
              [-118.4572334403517, 34.009852664377441],
              [-118.457228044755936, 34.009848480960876],
              [-118.457222561903606, 34.009844376308095],
              [-118.457216996129688, 34.009840351304256],
              [-118.457211345279049, 34.009836407760481],
              [-118.457205613701461, 34.009832549266569],
              [-118.457199801382174, 34.00982877311781],
              [-118.457193912675976, 34.009825083805467],
              [-118.457187946475671, 34.009821476826012],
              [-118.457181906068286, 34.009817959379205],
              [-118.457175791448833, 34.009814530563617],
              [-118.457169606952391, 34.009811191264347],
              [-118.457163351501379, 34.009807942386949],
              [-118.457157029425872, 34.009804783915044],
              [-118.457150643988285, 34.009801718540807],
              [-118.457144194106007, 34.009798746268437],
              [-118.457137684124035, 34.009795869785975],
              [-118.457131114012725, 34.009793083684329],
              [-118.45712448383118, 34.00979039878176],
              [-118.457117803282827, 34.009787807829142],
              [-118.45711106589215, 34.00978531445714],
              [-118.457104278164138, 34.009782920444252],
              [-118.457097440093889, 34.00978062488889],
              [-118.4570905592591, 34.009778427762278],
              [-118.457083628101671, 34.009776332699332],
              [-118.457076656359618, 34.009774338761524],
              [-118.457069645115283, 34.009772445944819],
              [-118.457062594373625, 34.009770655150611],
              [-118.457055506294864, 34.009768965469313],
              [-118.457048385243453, 34.009767383195062],
              [-118.457041231184988, 34.009765902017215],
              [-118.457034046299242, 34.009764524632153],
              [-118.457026836003791, 34.009763251920901],
              [-118.457019599230932, 34.009762086592076],
              [-118.457012339208418, 34.009761025027331],
              [-118.457005059188901, 34.009760068115867],
              [-118.45699775918203, 34.009759217660715],
              [-118.456990440275348, 34.009758474559348],
              [-118.456983107876596, 34.009757837889637],
              [-118.456975766305987, 34.009757305832238],
              [-118.45696841124817, 34.009756881108082],
              [-118.456961050290673, 34.009756565491479],
              [-118.456953683403952, 34.009756353573373],
              [-118.456946310627359, 34.009756252565857],
              [-118.456938941664319, 34.009756255219891],
              [-118.456931568966567, 34.009756366973363],
              [-118.456925085434847, 34.009756945961357],
              [-118.456916843735769, 34.009756913151939],
              [-118.456906115121086, 34.009758019378886],
              [-118.456899619336681, 34.009758336966868],
              [-118.456893131651597, 34.009758750086526],
              [-118.456886649880971, 34.009759255139969],
              [-118.456880182709781, 34.009759856602024],
              [-118.456873729035692, 34.009760550870666],
              [-118.456867289941314, 34.009761337941846],
              [-118.456860868688878, 34.009762220507831],
              [-118.456854467414018, 34.009763193151294],
              [-118.456848087228707, 34.00976426127729],
              [-118.456841731365813, 34.009765422168911],
              [-118.456835399825351, 34.009766675826249],
              [-118.456829095835118, 34.009768018630872],
              [-118.456822821570128, 34.009769452377654],
              [-118.456816575957575, 34.009770978873711],
              [-118.456810364410131, 34.009772598098621],
              [-118.456804190141057, 34.009774303729451],
              [-118.456798047757161, 34.009776099392724],
              [-118.456791949171347, 34.009777985944957],
              [-118.456785887863788, 34.009779958903046],
              [-118.456779868179368, 34.009782020955271],
              [-118.456773895525856, 34.009784171179632],
              [-118.456767967713475, 34.009786405076674],
              [-118.456762088009597, 34.009788726240252],
              [-118.456756255316819, 34.009791131969877],
              [-118.456753642754933, 34.009792258857651],
              [-118.456750473975191, 34.009793624052243],
              [-118.456743659720502, 34.009796286826848],
              [-118.456608517332796, 34.009858997717387],
              [-118.456543221269897, 34.009889299170965],
              [-118.456531363940755, 34.009894650452345],
              [-118.45652179708452, 34.009898769687098],
              [-118.45651214502243, 34.009902748603906],
              [-118.456502411002077, 34.009906587190557],
              [-118.456492599333984, 34.00991028182456],
              [-118.456482711110567, 34.009913834304797],
              [-118.456472748487158, 34.009917242820087],
              [-118.456462717949137, 34.009920505542766],
              [-118.456459236888378, 34.009921581616481],
              [-118.456452618409159, 34.009923621575417],
              [-118.456442457449853, 34.009926591790872],
              [-118.456432235056624, 34.00992941348462],
              [-118.456421954477108, 34.009932086644305],
              [-118.456411622181975, 34.009934606737779],
              [-118.456401234953177, 34.009936979186449],
              [-118.456390800358704, 34.00993920215857],
              [-118.456380323781787, 34.009941270224537],
              [-118.456369801979861, 34.009943184298258],
              [-118.456359242555223, 34.009944948858511],
              [-118.456348742297592, 34.009946446339931],
              [-118.456300134635001, 34.009971943394319],
              [-118.456160514109172, 34.010045174489896],
              [-118.456020675299257, 34.010118522546051],
              [-118.455944650765744, 34.010028606710392],
              [-118.455526707007863, 34.01024881950265],
              [-118.453488977351711, 34.011322458950602],
              [-118.451266670867156, 34.012493277763092],
              [-118.447415268379345, 34.01452145458731],
              [-118.443982438938178, 34.016329238981022],
              [-118.443524934656011, 34.016570155626709],
              [-118.443608389729548, 34.016671752099207],
              [-118.443655455706036, 34.016728747224349],
              [-118.443701763298449, 34.016785017580936],
              [-118.443748802413026, 34.016842027193782],
              [-118.443795127405082, 34.01689828843606],
              [-118.443842102962932, 34.016955334308498],
              [-118.443888428066089, 34.017011592810782],
              [-118.443935402673262, 34.017068639552711],
              [-118.443981728998835, 34.017124900720162],
              [-118.444028703728421, 34.017181946524694],
              [-118.444075046538472, 34.017238230134851],
              [-118.444076462000908, 34.017239944153857],
              [-118.444163089310621, 34.017364148983042],
              [-118.444219877738007, 34.017449798551951],
              [-118.444274862545115, 34.017536258901934],
              [-118.444328023047746, 34.017623509376286],
              [-118.444379353637117, 34.017711513936646],
              [-118.444428826064339, 34.017800254658688],
              [-118.44447643366145, 34.017889700015573],
              [-118.444522158952935, 34.017979822126215],
              [-118.44456598880322, 34.01807059489667],
              [-118.444607910086191, 34.018161994035836],
              [-118.444648018495911, 34.018253895683053],
              [-118.444676445784481, 34.018320880463236],
              [-118.444690446981696, 34.018353508611206],
              [-118.444727705278638, 34.018446296123095],
              [-118.444763010067817, 34.018539610105783],
              [-118.444796357956562, 34.018633424429026],
              [-118.444840027905769, 34.01876651212153],
              [-118.44486860713242, 34.018861410514873],
              [-118.444895086550986, 34.018956814288259],
              [-118.444930968089025, 34.019098873878903],
              [-118.444952569907642, 34.019195041188453],
              [-118.444972147676111, 34.019291508954559],
              [-118.444998296259357, 34.019440306413955],
              [-118.445012728221059, 34.019537400778795],
              [-118.445025123642978, 34.01963469107119],
              [-118.445035537173979, 34.019732275357597],
              [-118.445040556255847, 34.019785168822885],
              [-118.445052257801393, 34.019902628100624],
              [-118.445063956150975, 34.020020090996034],
              [-118.445149668919768, 34.020880674752206],
              [-118.444901791703799, 34.020642945116734],
              [-118.439798925701552, 34.023624447967769],
              [-118.442449735428823, 34.025751867905903],
              [-118.445356598542773, 34.022407837098683],
              [-118.445369790546451, 34.022458524102973],
              [-118.445395626205965, 34.022550031029674],
              [-118.445423375166399, 34.022641144133509],
              [-118.445453028661603, 34.022731842710257],
              [-118.44548457896488, 34.022822097937919],
              [-118.445518016179179, 34.022911880100885],
              [-118.445553329338836, 34.023001162192003],
              [-118.445590508556108, 34.023089916298588],
              [-118.445629542879487, 34.023178118117947],
              [-118.445670420250678, 34.023265738843669],
              [-118.445730827513245, 34.023388224628263],
              [-118.445753262556323, 34.023367228886407],
              [-118.446001816271931, 34.023131361862326],
              [-118.446354650545587, 34.022800087926612],
              [-118.446428561419665, 34.022729778887879],
              [-118.446642177290954, 34.022526577933029],
              [-118.446761901084429, 34.022412689375933],
              [-118.446901206790756, 34.022280174622047],
              [-118.447015497339152, 34.022171455493194],
              [-118.447176578674132, 34.02201822184869],
              [-118.447343944036916, 34.021859011867491],
              [-118.447505825661992, 34.021705021133215],
              [-118.447684625414283, 34.021534484679584],
              [-118.447833302695059, 34.021393950098357],
              [-118.448614816061379, 34.020650799885708],
              [-118.448755776155863, 34.020516756847407],
              [-118.451110867828206, 34.019146792912487],
              [-118.450940721078496, 34.018943560054602],
              [-118.450938304478626, 34.018940935698843],
              [-118.450935737030022, 34.018938044150708],
              [-118.450933113467997, 34.01893518707044],
              [-118.450930425155732, 34.018932368998001],
              [-118.450927682939138, 34.01892959349901],
              [-118.450924880288326, 34.018926854287031],
              [-118.450922020490069, 34.018924158562221],
              [-118.450919103534673, 34.018921504521415],
              [-118.450916135922981, 34.018918893041899],
              [-118.450913107910978, 34.018916324160053],
              [-118.450910032505192, 34.018913800531934],
              [-118.450906901044405, 34.018911322189872],
              [-118.450903717873729, 34.0189088918222],
              [-118.45090048838702, 34.018906505802661],
              [-118.450897203932783, 34.018904165966632],
              [-118.450893873196563, 34.018901876789329],
              [-118.450890496149199, 34.018899632861661],
              [-118.450887070668998, 34.018897442305402],
              [-118.450883602140237, 34.018895299691138],
              [-118.450880087334298, 34.018893208637095],
              [-118.45087652732407, 34.018891167336236],
              [-118.450872928629906, 34.018889180271849],
              [-118.450869289066929, 34.018887243845938],
              [-118.450865605401788, 34.018885360775172],
              [-118.450861888465866, 34.018883531920764],
              [-118.450858131772989, 34.018881759109739],
              [-118.450854337473857, 34.0188800396297],
              [-118.450850506670562, 34.01887837708253],
              [-118.450846642591657, 34.018876767850095],
              [-118.450842744173826, 34.018875215542437],
              [-118.450838816840118, 34.018873721942498],
              [-118.450834855162654, 34.018872284365791],
              [-118.4508308667249, 34.018870903685638],
              [-118.450826848293417, 34.018869582618564],
              [-118.450822804193962, 34.018868320247137],
              [-118.450818732261254, 34.01886711657918],
              [-118.450814640078718, 34.01886597248803],
              [-118.450810518985051, 34.018864888005972],
              [-118.450806380884643, 34.018863862187125],
              [-118.450802219300968, 34.018862898661673],
              [-118.450798037462619, 34.018861993811498],
              [-118.450793835388836, 34.018861151242689],
              [-118.450789620658369, 34.018860370926838],
              [-118.450785184119795, 34.018859616682171],
              [-118.450777634294184, 34.018858350271422],
              [-118.450772867706391, 34.018857425967191],
              [-118.450768118072162, 34.018856433082796],
              [-118.450763391882575, 34.018855370692457],
              [-118.450758689142546, 34.01885423969776],
              [-118.450754008779114, 34.018853041905693],
              [-118.450749355118077, 34.018851776398698],
              [-118.450744729237201, 34.018850442271081],
              [-118.450740132228873, 34.018849041321957],
              [-118.450735566253584, 34.018847572641675],
              [-118.450731029165411, 34.018846039844313],
              [-118.45072652636793, 34.018844441106779],
              [-118.450722056788251, 34.018842778236078],
              [-118.450717624732661, 34.018841046708403],
              [-118.450713229162304, 34.018839254641534],
              [-118.450708870062499, 34.018837399330948],
              [-118.450704550676477, 34.018835479862879],
              [-118.4507002720771, 34.018833494430382],
              [-118.450696037556085, 34.018831451134943],
              [-118.450691846001604, 34.018829344571465],
              [-118.450687698525527, 34.018827180145053],
              [-118.450683597278541, 34.018824955143089],
              [-118.450679543338453, 34.018822668660015],
              [-118.45067553672952, 34.018820325203379],
              [-118.450671579607402, 34.018817922962121],
              [-118.450667677399906, 34.018815464620509],
              [-118.450663821440955, 34.018812949309464],
              [-118.450660023659125, 34.018810380590537],
              [-118.450656278607255, 34.018807752173309],
              [-118.450652590664419, 34.018805073056896],
              [-118.450648956568074, 34.018802340548746],
              [-118.450645383906661, 34.018799556423637],
              [-118.450641867261922, 34.018796719800342],
              [-118.450638412051958, 34.018793831560082],
              [-118.450635017213671, 34.018790895312968],
              [-118.45063168273235, 34.018787908354597],
              [-118.450628411880331, 34.018784875180252],
              [-118.450625208968717, 34.018781792167822],
              [-118.450622066457839, 34.018778666557672],
              [-118.450618990814476, 34.018775492916532],
              [-118.450615986398347, 34.018772276637193],
              [-118.450613045630817, 34.018769017748113],
              [-118.450610176076069, 34.018765713516416],
              [-118.450607373437236, 34.018762370268831],
              [-118.450604642040261, 34.018758987087764],
              [-118.450601984064903, 34.018755566669576],
              [-118.450599397321596, 34.018752104514874],
              [-118.450596881849236, 34.01874860783574],
              [-118.450594443046455, 34.018745073907461],
              [-118.450592075504801, 34.018741503651704],
              [-118.450589784666704, 34.018737902457481],
              [-118.450587568347402, 34.018734266726646],
              [-118.450585429814339, 34.018730600053303],
              [-118.450583369062528, 34.018726901535878],
              [-118.450581386111523, 34.018723174780398],
              [-118.450579479878542, 34.018719419790962],
              [-118.450577651460833, 34.018715639268081],
              [-118.450575908422394, 34.018711830478885],
              [-118.450574238863766, 34.01870799527088],
              [-118.450572652567615, 34.018704140819899],
              [-118.450571148417282, 34.018700260819195],
              [-118.450569725359259, 34.018696360682128],
              [-118.450568383393517, 34.018692440408543],
              [-118.450567124685392, 34.01868849999051],
              [-118.450565948181293, 34.018684544841022],
              [-118.450564854939557, 34.018680570448488],
              [-118.450563847149866, 34.018676581312477],
              [-118.450562920486277, 34.018672578350589],
              [-118.45056207712399, 34.018668563357828],
              [-118.450561319228171, 34.018664536326156],
              [-118.45056064788632, 34.018660498153004],
              [-118.450560058782415, 34.018656451559025],
              [-118.450559554076861, 34.018652395634753],
              [-118.450559137037047, 34.018648333974006],
              [-118.450558803332285, 34.01864426659305],
              [-118.450558555142564, 34.018640196188244],
              [-118.450558391380184, 34.01863612186223],
              [-118.450558315302885, 34.018632045405838],
              [-118.45055832368223, 34.018627970437329],
              [-118.450558417581234, 34.018623893346494],
              [-118.450558598116643, 34.01861982043998],
              [-118.450558863103609, 34.018615748119821],
              [-118.45055920933315, 34.018611683610246],
              [-118.450559647602546, 34.018607621461719],
              [-118.450560166036567, 34.018603568029327],
              [-118.450560770058303, 34.018599525095887],
              [-118.45056146072109, 34.018595487248277],
              [-118.450562233742971, 34.018591463517808],
              [-118.450563093435079, 34.018587450282212],
              [-118.450564035471658, 34.018583448459303],
              [-118.450565060964493, 34.018579463454017],
              [-118.450566168811434, 34.018575491664315],
              [-118.450567363377118, 34.018571539384752],
              [-118.450568637068429, 34.018567603938919],
              [-118.45056999422556, 34.018563687113833],
              [-118.450571433775679, 34.018559790716459],
              [-118.450572956806198, 34.018555915644313],
              [-118.450574557908737, 34.01855206281909],
              [-118.450576240336147, 34.018548233130225],
              [-118.45057800085975, 34.018544430195867],
              [-118.45057984272276, 34.018540653102363],
              [-118.450581761604184, 34.018536903668974],
              [-118.45058376291729, 34.018533181875405],
              [-118.450585838015428, 34.018529490458576],
              [-118.450587991234102, 34.018525830303808],
              [-118.45059022148574, 34.018522200513665],
              [-118.450592527707101, 34.018518604698244],
              [-118.450594907742556, 34.018515044668575],
              [-118.450597362660261, 34.018511517716185],
              [-118.450599891382424, 34.018508024746588],
              [-118.450602495020718, 34.018504571164755],
              [-118.45060516599176, 34.018501156097543],
              [-118.45060791187899, 34.018497780418166],
              [-118.45061072620102, 34.018494446855392],
              [-118.450613611108665, 34.018491152696548],
              [-118.450616564446221, 34.01848789975287],
              [-118.450619584072726, 34.018484692539886],
              [-118.450622669978429, 34.018481529254622],
              [-118.450625822168178, 34.018478410798593],
              [-118.450629042807336, 34.018475337163686],
              [-118.450632325433887, 34.018472314684757],
              [-118.450635667843784, 34.018469336157814],
              [-118.450639075489079, 34.018466408774643],
              [-118.450642544029435, 34.018463530748527],
              [-118.450646070226639, 34.018460703894533],
              [-118.450649657338317, 34.018457930003564],
              [-118.450653298858882, 34.018455207296881],
              [-118.450656998041197, 34.018452536663808],
              [-118.450660754909435, 34.018449922611978],
              [-118.450664566201141, 34.018447362448882],
              [-118.450668428673211, 34.018444857088284],
              [-118.450672342354821, 34.018442411939198],
              [-118.450676307202173, 34.018440018887922],
              [-118.450680322190976, 34.018437688756791],
              [-118.450684389442827, 34.018435413423987],
              [-118.450688495995038, 34.018433198347189],
              [-118.450692654839443, 34.018431043477811],
              [-118.450696854081428, 34.018428951564914],
              [-118.450701096944712, 34.018426918088785],
              [-118.450705384545884, 34.018424949355939],
              [-118.450709710359988, 34.018423039981577],
              [-118.450714076591098, 34.018421197169708],
              [-118.450718479967094, 34.018419416424912],
              [-118.450722920502429, 34.018417700451693],
              [-118.450727396027048, 34.018416048356656],
              [-118.450731905468018, 34.01841446194684],
              [-118.450736445567586, 34.018412939431364],
              [-118.450741020675935, 34.018411484400062],
              [-118.450745625379753, 34.018410096873239],
              [-118.45075025426577, 34.018408776870984],
              [-118.450754914912622, 34.018407524365145],
              [-118.450759598654159, 34.018406338486386],
              [-118.450764306582897, 34.018405221033767],
              [-118.450769038708387, 34.018404173810403],
              [-118.450773790680813, 34.018403193226284],
              [-118.450778560358984, 34.018402283797045],
              [-118.450783350966731, 34.018401441003085],
              [-118.450788159294817, 34.018400672068609],
              [-118.450792980978818, 34.018399970699178],
              [-118.450797819276318, 34.018399338685704],
              [-118.450802668783808, 34.018398777851381],
              [-118.450807526263077, 34.018398290011419],
              [-118.450812396010718, 34.018397868839024],
              [-118.450817273735026, 34.018397521562541],
              [-118.450822159416546, 34.018397244575802],
              [-118.450827047642107, 34.018397037899113],
              [-118.450831939494364, 34.018396901528362],
              [-118.450836836070508, 34.018396838164115],
              [-118.450841731942759, 34.018396845121991],
              [-118.450846626028465, 34.018396922406062],
              [-118.450851519410264, 34.018397070012249],
              [-118.450856406689596, 34.018397290665419],
              [-118.450861292187284, 34.018397582546221],
              [-118.45086616614978, 34.018397943888132],
              [-118.450871035097265, 34.018398379174435],
              [-118.450875893577731, 34.018398881213194],
              [-118.450880738382011, 34.018399457228639],
              [-118.450885574884538, 34.018400099988575],
              [-118.450890393365782, 34.018400814036831],
              [-118.450895195995912, 34.01840160026687],
              [-118.450899986003421, 34.018402455060546],
              [-118.45224317367925, 34.01762053905118],
              [-118.453665133029702, 34.016792740333749],
              [-118.454030978989252, 34.016478432172512],
              [-118.454883067042132, 34.015768719283088],
              [-118.454903013928416, 34.015743890671857],
              [-118.45423722012751, 34.014928200139266],
              [-118.454234390081325, 34.014920408005786],
              [-118.454110979415702, 34.015024769718174],
              [-118.454234286467326, 34.01492006761552],
              [-118.454234390081325, 34.014920408005786]
            ]
          ],
          [
            [
              [-118.444166283537797, 34.0178642815155],
              [-118.444143139828668, 34.017824770374851],
              [-118.444120776255204, 34.017786596039997],
              [-118.444091325425887, 34.017798995010587],
              [-118.444113483620555, 34.017836824818794],
              [-118.444136498385674, 34.017876113760501],
              [-118.444183966061289, 34.017960869062911],
              [-118.444210908166994, 34.01801125855841],
              [-118.444241090164994, 34.018000142456074],
              [-118.444213993899268, 34.017949472255786],
              [-118.444166283537797, 34.0178642815155]
            ]
          ],
          [
            [
              [-118.443725487598101, 34.017213113252211],
              [-118.443716047204589, 34.017200722104683],
              [-118.443688173203583, 34.017215431222851],
              [-118.443697612511926, 34.01722782237654],
              [-118.443725487598101, 34.017213113252211]
            ]
          ]
        ]

# If requested, print KSMO coordinates and exit
if args.show_ksmo_cords:
    print("KSMO boundary coordinates (longitude, latitude):")
    for polygon in ksmo_boundary_coords:
        for ring in polygon:
            for coord in ring:
                print(coord)
    exit(0)

# Read CSV files
df = pd.read_csv(input_csv).dropna(subset=['latitude', 'longitude', 'airspeed'])

# Convert types
df[['latitude', 'longitude', 'elevation', 'airspeed']] = df[['latitude', 'longitude', 'elevation', 'airspeed']].astype(float)

# Extract timestamps
full_time = pd.to_datetime(df['time'], format='%H:%M:%S') + pd.to_timedelta(df['time_ms'], unit='ms')
df['timestamp'] = full_time

# Generate ground speed and track DataFrame at 1Hz intervals (every second)
gps_df = df[['timestamp', 'latitude', 'longitude']].iloc[::5].reset_index(drop=True)
gps_df['lat_shift'] = gps_df['latitude'].shift()
gps_df['lon_shift'] = gps_df['longitude'].shift()
gps_df['time_shift'] = gps_df['timestamp'].shift()

# Calculate ground speed and heading
def haversine(lat1, lon1, lat2, lon2):
    R = 6378137
    phi1, phi2 = np.radians(lat1), np.radians(lat2)
    d_phi = np.radians(lat2 - lat1)
    d_lambda = np.radians(lon2 - lon1)
    a = np.sin(d_phi/2)**2 + np.cos(phi1) * np.cos(phi2) * np.sin(d_lambda/2)**2
    return 2 * R * np.arctan2(np.sqrt(a), np.sqrt(1-a))

gps_df['delta_t'] = (gps_df['timestamp'] - gps_df['time_shift']).dt.total_seconds()
gps_df['ground_speed_mps'] = haversine(gps_df['lat_shift'], gps_df['lon_shift'], gps_df['latitude'], gps_df['longitude']) / gps_df['delta_t']

# Calculate track_deg (0 = North, increases clockwise), then wrap to [-180, 180] so center is 0
track_rad = np.arctan2(
    np.radians(gps_df['longitude'] - gps_df['lon_shift']),
    np.radians(gps_df['latitude'] - gps_df['lat_shift'])
)
track_deg = np.degrees(track_rad)
# Wrap to [-180, 180]
track_deg_wrapped = ((track_deg + 180) % 360) + 360
gps_df['track_deg'] = track_deg_wrapped

gps_df_clean = gps_df.dropna(subset=['ground_speed_mps', 'track_deg'])

gps_df_clean[['timestamp', 'ground_speed_mps', 'track_deg']].to_csv(os.path.join(outdir, 'ground_speed_track.csv'), index=False)

# CSV with millisecond timestamps, airspeed, and elevation
df[['timestamp', 'airspeed', 'elevation']].to_csv(os.path.join(outdir, 'airspeed_elevation.csv'), index=False)

# Rolling average (5-second batch) for ground speed
gps_df_clean['ground_speed_avg'] = gps_df_clean['ground_speed_mps'].rolling(window=5, min_periods=1).mean()

# For track, use circular mean so that wraparound at 180/-180 is handled correctly
def circular_mean_deg(series):
    radians = np.deg2rad(series)
    mean_angle = np.arctan2(np.mean(np.sin(radians)), np.mean(np.cos(radians)))
    return np.rad2deg(mean_angle)

gps_df_clean['track_avg'] = gps_df_clean['track_deg'].rolling(window=5, min_periods=1).apply(circular_mean_deg, raw=False)

# Clean airspeed for time series plot: drop NaN, use rolling average of previous 15 timestamps
airspeed_clean = df[['timestamp', 'airspeed']].dropna(subset=['airspeed']).copy()
airspeed_clean['airspeed_avg'] = airspeed_clean['airspeed'].rolling(window=15, min_periods=1).mean()

# Function to estimate zoom level based on lat/lon width
def estimate_zoom_level(lat_min, lat_max, lon_min, lon_max):
    # Approximate: zoom = log2(360 / lon_width) + 1, but clamp to [1, 20]
    lon_width = abs(lon_max - lon_min)
    lat_width = abs(lat_max - lat_min)
    # Use the larger of the two for conservative zoom
    width = max(lon_width, lat_width)
    if width <= 0:
        return 15  # fallback
    zoom = int(np.clip(np.log2(360.0 / width) + 3, 1, 20))
    return zoom

def plot_airport_boundary(ax, multipolygon_coords, color='white', linewidth=1, alpha=0.7):
    # multipolygon_coords: list of polygons, each polygon is a list of (lon, lat) pairs
    for polygon_coords in multipolygon_coords:
        for ring in polygon_coords:
            # ring is a list of [lon, lat]
            poly_coords = [(lon, lat) for lon, lat in ring]
            polygon = Polygon(poly_coords, closed=True, fill=False, edgecolor=color, linewidth=linewidth, alpha=alpha, zorder=10)
            ax.add_patch(polygon)

# Plot maps with heatmaps and high-resolution terrain basemaps with opacity
def plot_map(df, column, title, cmap, outdir, show_airport=True, ax=None):
    # If ax is None, create a new figure and axis
    close_fig = False
    if ax is None:
        fig, ax = plt.subplots(figsize=(12,12))
        close_fig = True
    points = np.array([df['longitude'], df['latitude']]).T.reshape(-1,1,2)
    segments = np.concatenate([points[:-1], points[1:]], axis=1)
    norm = Normalize(vmin=df[column].min(), vmax=df[column].max())
    lc = LineCollection(segments, cmap=cmap, norm=norm, linewidth=3)
    lc.set_array(df[column])
    ax.add_collection(lc)
    ax.autoscale()
    ax.set_facecolor('black')
    # Calculate zoom level based on data extent
    lat_min, lat_max = df['latitude'].min(), df['latitude'].max()
    lon_min, lon_max = df['longitude'].min(), df['longitude'].max()
    zoom = estimate_zoom_level(lat_min, lat_max, lon_min, lon_max)
    # Use high-resolution ESRI World Imagery as terrain basemap with opacity
    ctx.add_basemap(
        ax,
        crs='EPSG:4326',
        zoom=zoom,
        source=ctx.providers.Esri.WorldImagery,
        alpha=0.3  # set opacity for basemap
    )
    # Show KSMO boundary if requested
    if show_airport:
        plot_airport_boundary(ax, ksmo_boundary_coords)
    cbar = plt.colorbar(lc, ax=ax, label=column)
    ax.set_title(title)
    if close_fig:
        outpath = os.path.join(outdir, f'{title.replace(" ", "_").lower()}.png')
        plt.savefig(outpath, dpi=300)
        plt.close(fig)
    return ax

# Save individual maps
plot_map(df, 'elevation', 'GPS Track with Elevation', 'terrain', outdir)
plot_map(df, 'airspeed', 'GPS Track with Airspeed', 'viridis', outdir)

# Save a subplot with both maps
fig, axes = plt.subplots(1, 2, figsize=(22, 12))
plot_map(df, 'elevation', 'GPS Track with Elevation', 'terrain', outdir, ax=axes[0])
plot_map(df, 'airspeed', 'GPS Track with Airspeed', 'viridis', outdir, ax=axes[1])
axes[0].set_title('GPS Track with Elevation')
axes[1].set_title('GPS Track with Airspeed')
plt.tight_layout()
outpath = os.path.join(outdir, 'maps_subplot.png')
plt.savefig(outpath, dpi=300)
plt.close(fig)

# Plot speed, heading, and (airspeed - ground speed) over time (with mean offset removed)
fig, ax1 = plt.subplots(figsize=(14,6))
ax1.plot(airspeed_clean['timestamp'], airspeed_clean['airspeed_avg'], label='Airspeed (15-sample avg)', color='blue')
ax1.plot(gps_df_clean['timestamp'], gps_df_clean['ground_speed_avg'], label='Ground Speed Avg', color='green')

# Compute the difference between airspeed and ground speed, align on timestamp
# Interpolate ground speed to airspeed timestamps for difference
ground_speed_interp = np.interp(
    pd.to_numeric(airspeed_clean['timestamp']),
    pd.to_numeric(gps_df_clean['timestamp']),
    gps_df_clean['ground_speed_avg']
)
airspeed_minus_ground = airspeed_clean['airspeed_avg'] - ground_speed_interp
airspeed_minus_ground_demeaned = airspeed_minus_ground - np.mean(airspeed_minus_ground)
ax1.plot(
    airspeed_clean['timestamp'],
    airspeed_minus_ground_demeaned,
    label='Airspeed - Ground Speed (demeaned)',
    color='purple',
    linestyle=':'
)

ax1.set_xlabel('Time')
ax1.set_ylabel('Speed (m/s)')
ax1.legend(loc='upper left')

ax2 = ax1.twinx()
ax2.plot(gps_df_clean['timestamp'], gps_df_clean['track_avg'], color='red', linestyle='--', label='Track Avg')
ax2.set_ylabel('Track (degrees, centered at 0)')
ax2.legend(loc='upper right')

plt.title('Airspeed (15-sample avg), Ground Speed (Avg), Track (Avg), and Airspeed-GroundSpeed (demeaned) Over Time')
plt.grid(True)
plt.tight_layout()
outpath = os.path.join(outdir, 'speed_and_track_over_time.png')
plt.savefig(outpath, dpi=300)
plt.close(fig)
